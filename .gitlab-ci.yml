.testing_pipeline:
    variables:
        module_folders: "budget compartments iam monitoring security vcn"
    before_script:
        - export http_proxy=http://www-proxy-hqdc.us.oracle.com:80
        - export https_proxy=$http_proxy
        - curl https://releases.hashicorp.com/terraform/1.2.2/terraform_1.2.2_linux_amd64.zip > terraform.zip
        - unzip terraform.zip -d /bin
        - terraform --version
        - pip install pytest
        - pip install boto3
        - pip install pytest_terraform
        - |+
          for folder in $module_folders 
          do
            echo "$tfKey" > "$folder/tfKey"
            cp testing/providers.tf "$folder/providers.tf"
            for dir in $folder/*; 
            do
                if [ -d "$dir" ]; then
                    echo "$tfKey" > "$dir/tfKey"
                    cp testing/providers.tf "$dir/providers.tf"
                fi
            done 
          done
    stage: test
    tags: [LZ]
    image: lab-runner

unit_tests:
    extends: .testing_pipeline
    script:
        - pytest -k terraform --tf-mod-dir=budget tests/test_budget.py
        - pytest -k terraform --tf-mod-dir=compartments tests/test_compartments.py
    only:
        refs:
            - merge_requests
        variables:
            - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development"
    

integration_test:
    extends: .testing_pipeline
    script:
        - pytest -m integration
    only:
        refs:
            - merge_requests
        variables:
            - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"

release:
    stage: deploy
    tags: [LZ]
    image: node:17
    before_script:
        - npm config set strict-ssl false
        - npm config set registry https://artifacthub-iad.oci.oraclecorp.com/api/npm/npmjs-registry
        - npm install @semantic-release/gitlab
        - npm install @semantic-release/git
    script:
        - npx semantic-release -b $CI_COMMIT_REF_NAME
    rules:
         - if: '$CI_COMMIT_BRANCH == "production"'
